package ru.skypro;

import java.time.LocalDate;

public class Main {

    public static void main(String[] args) {
        System.out.println();
        task1();
        task2();
        task3();
        task4();
        task5();
    }

    /**
     * ### Задание 1
     * Выведите в одну строку через пробел числа от 1 до 10, используя цикл while.
     * На следующей строке выведите числа в обратном порядке от 10 до 1, используя оператор for.
     * Для обоих циклов можно использовать как одну общую переменную, так и в каждом цикле свою.
     * Не забудьте выполнить переход на новую строку между двумя циклами.
     * В результате программы вывод должен получиться следующий:
     * 1 2 3 4 5 6 7 8 9 10
     * 10 9 8 7 6 5 4 3 2 1
     */
    public static void task1() {
        System.out.println("Task 1");

        int i = 0;
        while (i < 10) {
            System.out.print(++i + " ");
        }
        System.out.println();

        for (; i > 0; i--) {
            System.out.print(i + " ");
        }
        System.out.println();

        System.out.println();
    }

    /**
     * ### Задание 2
     * В вашей компании пятница является днем отчетным.
     * Нам нужно написать программу, которая считает дни месяца по датам, определяет, какой день пятница, и выводит
     *      сообщение с напоминанием о том, что нужно подготовить еженедельный отчет.
     * Условия задачи:
     *      Создайте переменную типа int, которая хранит в себе номер первой пятницы месяца (число от 1 до 7).
     *      Выведите на каждую пятницу месяца (включая полученную) сообщение следующего вида:
     *      "Сегодня пятница, ...-е число. Необходимо подготовить отчет."
     *      В нашем месяце 31 день. В результате у вас должно вывестись от 4 до 5 сообщений с напоминаниями по разным датам.
     */
    public static void task2() {
        System.out.println("Task 2");
        int firstFridayMonth = 3;
        int maxDateInMonth = 31;
        int daysPerWeek = 7;

        for (int currentDate = firstFridayMonth; currentDate <= maxDateInMonth; currentDate += daysPerWeek) {
            System.out.println("Сегодня пятница, " + currentDate + "-е число. Необходимо подготовить отчет.");
        }

        System.out.println();
    }

    /**
     * Мы решили написать астрономическое приложение, которое считает, когда над Землей пролетают кометы и их можно
     *      будет увидеть. Для начала нам нужно посчитать траекторию движения кометы, которая пролетает рядом с Землей
     *      каждый 79-й год, начиная с нулевого.
     * Нам нужно узнать, в каких годах комета пролетала рядом с Землей за последние 200 лет и когда мы увидим ее в следующий раз.
     * Условия задачи:
     *      В консоль нужно вывести все годы за последние 200 лет, когда появлялась комета, а также следующий год ее появления.
     *      Для вычисления периода можно создать две дополнительные переменные, которые содержат год за 200 лет до текущего (из созданной ранее переменной) в качестве старта и 100 лет после в качестве завершения периода расчета.
     *      В результате решения задачи в консоль должен вывестись следующий результат:
     *          1896
     *          1975
     *          2054
     */
    public static void task3() {
        System.out.println("Task 3");
        int currentYear = LocalDate.now().getYear();
        int startPeriod = currentYear - 200;
        int finishPeriod = currentYear + 100;
        int period = 1;

        for (int year = startPeriod; year <= finishPeriod; year = year + period) {
            if (year % 79 == 0) {
                System.out.println(year);
                period = 79;
            }
        }

        System.out.println();
    }


    /**
     * Задание 4
     * Необходимо пройти циклом по числам от 1 до 30 включительно и, если число делится на 3 без остатка, вывести ping,
     *      а если число делится на 5 без остатка, вывести pong.
     * Если число делится без остатка и на 3, и на 5, необходимо вывести ping pong.
     * Допускается наличие пустых строк в выводе.
     * Вывод должен быть следующий:
     *      1:
     *      2:
     *      3: ping
     *      4:
     *      5: pong
     *      6: ping
     *      7:
     *      8:
     *      9: ping
     *      10: pong
     *      11:
     *      12: ping
     *      13:
     *      14:
     *      15: ping pong
     *      16:
     *      17:
     *      18: ping
     *      19:
     *      20: pong
     * Критерии оценки
     *      – В консоль выводится значение из условия задачи
     *      – Цикл проходит по значениям и выполняет условие задачи деления цифр на 3 и 5
     *      – Код написан корректно и без ошибок.
     */
    public static void task4() {
        System.out.println("Task 4");
        String message;
        for (int i = 1; i <= 30; i++) {
            message = "";
            if (i % 3 == 0) {
                message += " ping";
            }
            if (i % 5 == 0) {
                message += " pong";
            }

            System.out.println(i + ":" + message);
        }
        System.out.println();
    }

    /**
     * ### Задание 5
     * Вывести первые 10 чисел последовательности Фибоначчи. Последовательность строится по следующему правилу:
     *      – Каждое следующее число равняется сумме двух предыдущих.
     * Дано: две целочисленные переменные, первая равна 0, вторая равна 1.
     *      Эти два числа — первые числа последовательности. Следующие восемь нужно вычислить и вывести.
     * Должно получиться следующее:
     *      0 1 1 2 3 5 8 13 21 34
     */
    public static void task5() {
        System.out.println("Task 5");
        long firstNumber = 0L;
        long secondNumber = 1L;
        long temp;
        int countNumbers = 10;

        System.out.print(firstNumber + " ");
        for (int i = 1; i < countNumbers; i++) {
            System.out.print(secondNumber + " ");
            temp = firstNumber;
            firstNumber = secondNumber;
            secondNumber += temp;
        }

        System.out.println();
    }

}
